#!/bin/bash

set -e

manifest_generation=$(dirname $0)/../manifest-generation

function usage() {
  >&2 echo "    Usage:
    $0 <MANDATORY ARGUMENTS> [OPTIONAL ARGUMENTS]
    Mandatory arguments:
       -c CF manifest file
       -i IaaS-settings stub file
       -p property-overrides stub file
    Optional arguments:
       -n instance-count-overrides stub file
       -v release-versions stub file
       -r [use cflinuxfs-rootfs bosh release]

    Example:
    $0 -c ~/deployments/cf.yml \\
       -i manifest-generation/bosh-lite-stubs/iaas-settings.yml \\
       -p manifest-generation/bosh-lite-stubs/property-overrides.yml \\
       -n manifest-generation/bosh-lite-stubs/instance-count-overrides.yml \\
       -v manifest-generation/bosh-lite-stubs/release-versions.yml
       -r
"
  exit 1
}

rootfs_properties="${manifest_generation}/base-releases.yml";

while getopts "c:i:p:n:k:v:r" opt; do
  case $opt in
    c)
      cf_deployment_manifest=$OPTARG
      ;;
    i)
      iaas_settings=$OPTARG
      ;;
    p)
      property_overrides=$OPTARG
      ;;
    n)
      instance_counts=$OPTARG
      ;;
    k)
      >&2 echo "DEPRECATED: Persistent disk configuration moved to iaas_settings"
      ;;
    r)
      rootfs_properties="${manifest_generation}/rootfs-properties.yml";
      ;;
    v)
      release_versions=$OPTARG
      ;;
    *)
      echo "Unknown arguments"
      usage
      ;;
  esac
done

if [ -z ${cf_deployment_manifest} ]; then
  >&2 echo "CF manifest file is missing"
  argument_error=true
else
  if [ ! -f "${cf_deployment_manifest}" ]; then
    >&2 echo "CF manifest '${cf_deployment_manifest}' is not a regular file"
    argument_error=true
  fi
fi

if [ -z ${iaas_settings} ]; then
  >&2 echo "IaaS-settings stub file is missing"
  argument_error=true
else
  if [ ! -f "${iaas_settings}" ]; then
    >&2 echo "IaaS Setting stub '${iaas_settings}' is not a regular file"
    argument_error=true
  fi
fi

if [ -z ${property_overrides} ]; then
  >&2 echo "property-overrides stub file is missing"
  argument_error=true

else
  if [ ! -f "${property_overrides}" ]; then
    >&2 echo "Property Overrides stub '${property_overrides}' is not a regular file"
    argument_error=true
  fi
fi

if [[ ! -z "${instance_counts}" && ! -f "${instance_counts}" ]]; then
  >&2 echo "Instance Count Overrides stub '${instance_counts}' is not a regular file"
  argument_error=true
fi

if [[ ! -z "${release_versions}" && ! -f "${release_versions}" ]]; then
  >&2 echo "Release versions stub '${release_versions}' is not a regular file"
  argument_error=true
fi

if [ ! -z $argument_error ]; then
  usage
fi

tmpdir=$(mktemp -d /tmp/diego-manifest.XXXXX)

spiff merge \
  ${manifest_generation}/config-from-cf.yml \
  ${manifest_generation}/config-from-cf-internal.yml \
  ${cf_deployment_manifest} \
  > ${tmpdir}/config-from-cf.yml

spiff merge \
  ${manifest_generation}/diego.yml \
  ${rootfs_properties} \
  ${property_overrides} \
  ${instance_counts} \
  ${iaas_settings} \
  ${release_versions} \
  ${tmpdir}/config-from-cf.yml \
  > ${tmpdir}/diego.yml

spiff merge \
  ${manifest_generation}/misc-templates/bosh.yml \
  ${tmpdir}/diego.yml
